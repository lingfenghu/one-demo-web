<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hulingfeng.ylzdemo.mapper.StaffMapper">
    <resultMap id="staffMap" type="cn.hulingfeng.ylzdemo.model.po.Staff">
        <id property="staffId" column="staff_id"/>
        <result property="companyId" column="company_id"/>
        <result property="staffName" column="staff_name"/>
        <result property="sex" column="sex"/>
        <result property="age" column="age"/>
        <result property="identityId" column="identity_id"/>
        <result property="tel" column="tel"/>
        <result property="cardId" column="card_id"/>
        <result property="salaryCardId" column="salary_card_id"/>
        <result property="jobType" column="job_type"/>
        <result property="grade" column="grade"/>
        <association property="enterprise" resultMap="cn.hulingfeng.ylzdemo.mapper.EnterpriseMapper.enterpriseMap" columnPrefix="e_"/>
        <collection property="projects" resultMap="cn.hulingfeng.ylzdemo.mapper.ProjectMapper.projectMap" columnPrefix="p_"/>
    </resultMap>
    <insert id="add" parameterType="cn.hulingfeng.ylzdemo.model.po.Staff">
        <selectKey keyProperty="staffId" order="AFTER" resultType="integer">
            SELECT staff_id_seq.currval FROM dual
        </selectKey>
        INSERT INTO "staff"("staff_id","company_id","staff_name","sex","age","identity_id","tel","card_id","salary_card_id","job_type","grade") VALUES (staff_id_seq.nextval,#{companyId},#{staffName},#{sex},#{age},#{identityId},#{tel},#{cardId},#{salaryCardId},#{jobType},#{grade})
    </insert>
    <select id="list" resultMap="staffMap">
        SELECT * FROM "staff"
    </select>
    <select id="queryByStaffId" resultMap="staffMap">
        SELECT "staff".*,
        "join"."project_id" AS "p_project_id",
        "project_name" AS "p_project_name",
        "setup_date" AS "p_setup_date",
        "project_grade" AS "p_project_grade",
        "note" AS "p_note",
        "company_name" AS "e_company_name",
        "address" AS "e_address",
        "register_date" AS "e_register_date",
        "principal" AS "e_principal",
        "type" AS "e_type",
        "business_phone" AS "e_business_phone",
        "asset" AS "e_asset"
        FROM (SELECT * FROM "staff" WHERE "staff_id" = #{staffId}) "staff"
        LEFT JOIN "join" ON "staff"."staff_id" = "join"."staff_id"
        LEFT JOIN "project" ON "join"."project_id" = "project"."project_id"
        LEFT JOIN "enterprise" ON "staff"."company_id" = "enterprise"."company_id"
    </select>
    <select id="queryByParameters" resultMap="staffMap">
        SELECT "staff".*,
        "join"."project_id" AS "p_project_id",
        "project_name" AS "p_project_name",
        "setup_date" AS "p_setup_date",
        "project_grade" AS "p_project_grade",
        "note" AS "p_note",
        "company_name" AS "e_company_name",
        "address" AS "e_address",
        "register_date" AS "e_register_date",
        "principal" AS "e_principal",
        "type" AS "e_type",
        "business_phone" AS "e_business_phone",
        "asset" AS "e_asset"
        FROM "staff"
        LEFT JOIN "join" ON "staff"."staff_id" = "join"."staff_id"
        LEFT JOIN "project" ON "join"."project_id" = "project"."project_id"
        LEFT JOIN "enterprise" ON "staff"."company_id" = "enterprise"."company_id"
        <trim prefix="WHERE" prefixOverrides="AND|OR ">
            <if test="projectId != ''">"join"."project_id" = #{projectId} </if>
            <if test="cardId != ''">AND "card_id" = #{cardId} </if>
            <if test="staffName != ''">AND"staff_name" LIKE CONCAT(CONCAT('%',#{staffName}),'%') </if>
        </trim>
    </select>
    <update id="update" parameterType="cn.hulingfeng.ylzdemo.model.po.Staff">
        UPDATE "staff"
        <set>
            <if test="companyId != null">"company_id" = #{companyId},</if>
            <if test="staffName != null">"staff_name" = #{staffName},</if>
            <if test="sex != null">"sex" = #{sex},</if>
            <if test="age != null">"age" = #{age},</if>
            <if test="identityId != null">"identity_id" = #{identityId},</if>
            <if test="tel != null">"tel" = #{tel},</if>
            <if test="cardId != null">"card_id" = #{cardId},</if>
            <if test="salaryCardId != null">"salary_card_id" = #{salaryCardId},</if>
            <if test="jobType != null">"job_type" = #{jobType},</if>
            <if test="grade != null">"grade" = #{grade}</if>
        </set>
        WHERE "staff_id" = #{staffId}
    </update>
    <delete id="delete" parameterType="integer">
        DELETE FROM "staff" WHERE "staff_id"=#{staffId}
    </delete>
    <select id="getProjects" resultType="string">
        SELECT DISTINCT "project" FROM "staff" WHERE "project" IS NOT NULL
    </select>
    <select id="statsBySexWithParams" resultType="cn.hulingfeng.ylzdemo.model.vo.StatisticSex">
        SELECT "sex",COUNT("sex") "count" FROM "staff"
        <where>
            <if test="jobType!=''">"job_type" = #{jobType}</if>
            <if test="ageBegin != 0 and ageEnd != 0 ">AND "age" BETWEEN #{ageBegin} AND #{ageEnd}</if>
            <if test="grade!=''">AND "grade" = #{grade}</if>
        </where>
        GROUP BY "sex"
    </select>
    <select id="statsByAgeIntervalWithParams" resultType="cn.hulingfeng.ylzdemo.model.vo.StatisticAge">
        SELECT (CASE
        WHEN ("age">=18 AND "age"&lt;30) THEN '18-30岁'
        WHEN ("age">=30 AND "age"&lt;45) THEN '30-45岁'
        WHEN ("age">=45 AND "age"&lt;60) THEN '45-60岁'
        ELSE '其他(小于18大于60)'
        END) "ageInterval",COUNT(*) "count" FROM "staff"
        <where>
            <if test="jobType!=''">"job_type" = #{jobType}</if>
            <if test="sex != -1 ">AND "sex" = #{sex}</if>
            <if test="grade!=''">AND "grade" = #{grade}</if>
        </where>
        GROUP BY (CASE
        WHEN ("age">=18 AND "age"&lt;30) THEN '18-30岁'
        WHEN ("age">=30 AND "age"&lt;45) THEN '30-45岁'
        WHEN ("age">=45 AND "age"&lt;60) THEN '45-60岁'
        ELSE '其他(小于18大于60)'
        END) ORDER BY "ageInterval"
    </select>
    <select id="checkCardIdExist" resultType="integer">
        SELECT COUNT(*) FROM "staff" WHERE "card_id"=#{cardId}
    </select>
    <select id="checkIdentityIdExist" resultType="integer">
        SELECT COUNT(*) FROM "staff" WHERE "identity_id"=#{identityId}
    </select>
    <select id="getMaxCardId" resultType="string">
        SELECT MAX("card_id") AS "card_id" FROM "staff"
    </select>
</mapper>